diff --git a/app/Http/Controllers/API/CertificatesController.php b/app/Http/Controllers/API/CertificatesController.php
index c530710..c919883 100644
--- a/app/Http/Controllers/API/CertificatesController.php
+++ b/app/Http/Controllers/API/CertificatesController.php
@@ -120,7 +120,14 @@ public function destroy($id)
 
     public function fullCertificate($user_book_id)
     {
-        $fullCertificate=UserBook::where('id',$user_book_id)->with('questions')->with('generalInformation')->get();
+        $fullCertificate=UserBook::where('id',$user_book_id)->with('thesises', function ($query) {
+            $query->where('status','=','audited');
+        })->with('generalInformation', function ($query) {
+            $query->where('status','=','audited');
+        })->with('questions', function ($query) {
+            $query->where('status','=','audited');
+        })->get();
+        
         $all_avareges = UserBook::
         join('general_informations', 'user_book.id', '=', 'general_informations.user_book_id')
         ->join('questions', 'user_book.id', '=', 'questions.user_book_id')
diff --git a/app/Http/Controllers/API/GeneralInformationsController.php b/app/Http/Controllers/API/GeneralInformationsController.php
index f0dee01..301ea0a 100644
--- a/app/Http/Controllers/API/GeneralInformationsController.php
+++ b/app/Http/Controllers/API/GeneralInformationsController.php
@@ -137,9 +137,9 @@ public function review(Request $request)
                 $info->reviews = $request->reviews;
                 $userBook=UserBook::find($info->user_book_id);
                 $user=User::find($userBook->user_id);
-$userBook->status=$request->status;
+                $userBook->status=$request->status;
                 $userBook->reviews=$request->reviews;
-                $userBook->save();
+                $userBook->save();        
                 if( $request->status == 'rejected'){
                     $theses=Thesis::where('user_book_id',$info->user_book_id)->update(['status'=>$request->status ,'reviews'=>$request->reviews ]);
                     $questions=Question::where('user_book_id',$info->user_book_id)->update(['status'=>$request->status ,'reviews'=>$request->reviews ]);
diff --git a/app/Http/Controllers/API/PDFController.php b/app/Http/Controllers/API/PDFController.php
index 1a7866a..364d99e 100644
--- a/app/Http/Controllers/API/PDFController.php
+++ b/app/Http/Controllers/API/PDFController.php
@@ -102,7 +102,7 @@ public function generatePDF($user_book_id)
         PDF::SetAutoPageBreak(false, 0);
 
         // set bacground image
-                $img_file = 'https://scontent.fruh4-4.fna.fbcdn.net/v/t1.15752-9/321018891_998203714472901_2917387006404159496_n.jpg?_nc_cat=104&ccb=1-7&_nc_sid=ae9488&_nc_ohc=KIL9lvH3NKQAX-dNPoA&_nc_ht=scontent.fruh4-4.fna&oh=03_AdSn-xPaJkybQcyAbeOEQvZw8mZib2OuMQ-d_wuCdD2XMg&oe=63D7AE31';
+        $img_file = 'https://scontent.fruh4-4.fna.fbcdn.net/v/t1.15752-9/321018891_998203714472901_2917387006404159496_n.jpg?_nc_cat=104&ccb=1-7&_nc_sid=ae9488&_nc_ohc=KIL9lvH3NKQAX-dNPoA&_nc_ht=scontent.fruh4-4.fna&oh=03_AdSn-xPaJkybQcyAbeOEQvZw8mZib2OuMQ-d_wuCdD2XMg&oe=63D7AE31';
         // Image($file, $x='', $y='', $w=0, $h=0, $type='', $link='', $align='', $resize=false, $dpi=300, $palign='', $ismask=false, $imgmask=false, $border=0, $fitbox=false, $hidden=false, $fitonpage=false)
         PDF::Image($img_file, 0, 0, 210, 297, '', '', '', false, 300, '', false, false, 0);
 
@@ -136,12 +136,10 @@ public function generatePDF($user_book_id)
                 ###################### START THESIS ###################### 
                 foreach ($fullCertificate as $key=>$part) {
                     foreach ($part['thesises'] as $key=>$thesis) {
-                       
                         $this->addPage();
                         PDF::writeHTML(view('certificate.achevment', ['mainTitle' => 'الأطروحات' , 'subTitle'=>'أطروحة', 'index'=> $key+1, 'achevmentText' => $thesis->thesis_text , 'textDegree'=>$this->textDegree($thesis->degree)])->render(), true, false, true, false, '');
-                      
-}            }
-
+                }
+            }
                 ###################### END THESIS ###################### 
         
                 ###################### START THESIS ###################### 
@@ -171,12 +169,12 @@ public function addPage()
         $auto_page_break = PDF::getAutoPageBreak();
         PDF::SetAutoPageBreak(false, 0);
 
-                $img_file = 'https://scontent.fruh4-4.fna.fbcdn.net/v/t1.15752-9/321305767_682741096665260_3089836325661716829_n.jpg?_nc_cat=104&ccb=1-7&_nc_sid=ae9488&_nc_ohc=8CPY4uwPowYAX-OPJK3&_nc_ht=scontent.fruh4-4.fna&oh=03_AdTMYsSrdcOpkQX8-PT1-QkB8UB8mnXJi-DZmMGZHscEjw&oe=63D7BEBE';
-
+//$img_file = asset('asset/images/certTemp.jpg');
+        $img_file = 'https://scontent.fruh4-4.fna.fbcdn.net/v/t1.15752-9/321305767_682741096665260_3089836325661716829_n.jpg?_nc_cat=104&ccb=1-7&_nc_sid=ae9488&_nc_ohc=8CPY4uwPowYAX-OPJK3&_nc_ht=scontent.fruh4-4.fna&oh=03_AdTMYsSrdcOpkQX8-PT1-QkB8UB8mnXJi-DZmMGZHscEjw&oe=63D7BEBE';
         PDF::Image($img_file, 0, 0, 210, 297, '', '', '', false, 300, '', false, false, 0);
 
-//        PDF::SetAutoPageBreak($auto_page_break, $bMargin);
-  //      PDF::setPageMark();
+        PDF::SetAutoPageBreak($auto_page_break, $bMargin);
+        PDF::setPageMark();
     }
 
     public function textDegree($degree)
diff --git a/app/Http/Controllers/API/QuestionController.php b/app/Http/Controllers/API/QuestionController.php
index 96dd2ff..894dda9 100644
--- a/app/Http/Controllers/API/QuestionController.php
+++ b/app/Http/Controllers/API/QuestionController.php
@@ -203,6 +203,7 @@ public function review(Request $request)
                     $userBook->status=$request->status;
                     $userBook->reviews=$request->reviews;
                     $userBook->save();
+
                     $user->notify(
                         (new \App\Notifications\RejectAchievement())->delay(now()->addMinutes(2))
                     );
diff --git a/app/Http/Controllers/API/ThesisController.php b/app/Http/Controllers/API/ThesisController.php
index 8587e87..b4ff4aa 100644
--- a/app/Http/Controllers/API/ThesisController.php
+++ b/app/Http/Controllers/API/ThesisController.php
@@ -266,12 +266,12 @@ public function getByBook($book_id)
 
 
     public function image(Request $request)
-    {
+    { 
         $path = $request->query('path', 'not found');
         if ($path === 'not found') {
-            return $this->sendError('Path nout found');
+            return $this->sendError('Path not found');
         }
-        $image = Storage::get($path);
+        $image = Storage::get('image/saas.webp');   
         $exp = "/[.][a-z][a-z][a-z]/";
         if (is_null($image)) {
             return $this->sendError('Image not found');
@@ -279,6 +279,7 @@ public function image(Request $request)
 
         preg_match($exp, $path, $matches);
         $extention = ltrim($matches[0], '.');
+      
 
         return response($image, 200)->header('Content-Type', "image/$extention");
     }
diff --git a/app/Http/Controllers/API/UserBookController.php b/app/Http/Controllers/API/UserBookController.php
index 5aaa896..f95ce7c 100644
--- a/app/Http/Controllers/API/UserBookController.php
+++ b/app/Http/Controllers/API/UserBookController.php
@@ -13,9 +13,8 @@
 use App\Models\UserBook;
 use Illuminate\Support\Facades\Validator;
 use Illuminate\Support\Facades\Auth;
-use Spatie\Permission\Models\Role;
 use Illuminate\Support\Facades\DB;
-
+use Spatie\Permission\Models\Role;
 
 class UserBookController extends BaseController
 {
@@ -40,19 +39,18 @@ public function store(Request $request)
 
         $count = UserBook::where(function ($query) {
             $query->where('status', '!=', 'finished')
-            ->Where('status', '!=', 'rejected')
+                ->Where('status', '!=', 'rejected')
                 ->WhereNull('status');
-})->where('user_id',Auth::id())->count();
+        })->where('user_id', Auth::id())->count();
 
-        if($count > 0 ){
+        if ($count > 0) {
             return $this->sendError('You have an open book');
         }
         try {
-            $userBook=UserBook::firstOrCreate([
+            $userBook = UserBook::firstOrCreate([
                 'book_id' => $request->book_id,
-                'user_id'=>Auth::id()
+                'user_id' => Auth::id()
             ]);
-
         } catch (\Illuminate\Database\QueryException $e) {
             echo ($e);
             return $this->sendError('User or book does not exist');
@@ -63,37 +61,35 @@ public function store(Request $request)
 
     public function getByBookID($bookId)
     {
-        $userBook['userBook'] = UserBook::with('thesises','questions','generalInformation')->where('book_id',$bookId)->where('user_id', Auth::id())->first();
-        $userBook['completionPercentage']=10;
-        
-        
+        $userBook['userBook'] = UserBook::with('thesises', 'questions', 'generalInformation')->where('book_id', $bookId)->where('user_id', Auth::id())->first();
+        $userBook['completionPercentage'] = 10;
+
+
         //50 \ 8 => 6.25 for each (50%)
-        $theses=Thesis::where('user_book_id',$userBook['userBook']->id)->where(function ($query) {
-            $query->where('status','!=','retard')->where('status','!=','rejected')->orWhereNull('status');
+        $theses = Thesis::where('user_book_id', $userBook['userBook']->id)->where(function ($query) {
+            $query->where('status', '!=', 'retard')->where('status', '!=', 'rejected')->orWhereNull('status');
         })->count();
-        if($theses >8){
-            $userBook['completionPercentage']=$userBook['completionPercentage'] + (6.25 * 8); 
-        }
-        else{
-            $userBook['completionPercentage']=$userBook['completionPercentage'] + (6.25 * $theses);
+        if ($theses > 8) {
+            $userBook['completionPercentage'] = $userBook['completionPercentage'] + (6.25 * 8);
+        } else {
+            $userBook['completionPercentage'] = $userBook['completionPercentage'] + (6.25 * $theses);
         }
 
 
         //25 \ 5 => 5 for each (25%)
-        $questions=Question::where('user_book_id',$userBook['userBook']->id)->where(function ($query) {
-            $query->where('status','!=','retard')->where('status','!=','rejected')->orWhereNull('status');
+        $questions = Question::where('user_book_id', $userBook['userBook']->id)->where(function ($query) {
+            $query->where('status', '!=', 'retard')->where('status', '!=', 'rejected')->orWhereNull('status');
         })->count();
-        if($questions >5){
-            $userBook['completionPercentage']=$userBook['completionPercentage'] + (5 * 5);
-        }
-        else{
-            $userBook['completionPercentage']=$userBook['completionPercentage'] + (5 * $questions);
+        if ($questions > 5) {
+            $userBook['completionPercentage'] = $userBook['completionPercentage'] + (5 * 5);
+        } else {
+            $userBook['completionPercentage'] = $userBook['completionPercentage'] + (5 * $questions);
         }
 
-        $generalInformations=GeneralInformations::where('user_book_id',$userBook['userBook']->id)->where(function ($query) {
-            $query->where('status','!=','retard')->where('status','!=','rejected')->orWhereNull('status');
+        $generalInformations = GeneralInformations::where('user_book_id', $userBook['userBook']->id)->where(function ($query) {
+            $query->where('status', '!=', 'retard')->where('status', '!=', 'rejected')->orWhereNull('status');
         })->count();
-        $userBook['completionPercentage']=$userBook['completionPercentage'] + (15 * $generalInformations); // only one  (15%)
+        $userBook['completionPercentage'] = $userBook['completionPercentage'] + (15 * $generalInformations); // only one  (15%)
 
         return $this->sendResponse($userBook, "User book created");
     }
@@ -107,28 +103,26 @@ public function show($id)
         return $userBook;
     }
 
-       public function lastAchievement()
+    public function lastAchievement()
     {
-        $userBook['last_achievement'] = UserBook::where('user_id',Auth::id())->latest()->first();
-        $userBook['statistics'] = UserBook::
-        join('general_informations', 'user_book.id', '=', 'general_informations.user_book_id')
-        ->join('questions', 'user_book.id', '=', 'questions.user_book_id')
-        ->join('thesis', 'user_book.id', '=', 'thesis.user_book_id')
-        ->select(DB::raw('avg(general_informations.degree) as general_informations_degree,avg(questions.degree) as questions_degree,avg(thesis.degree) as thesises_degree'))
-        ->where('user_id', Auth::id())
-        ->orderBy('user_book.created_at', 'desc')->first();
+        $userBook['last_achievement'] = UserBook::where('user_id', Auth::id())->latest()->first();
+        $userBook['statistics'] = UserBook::join('general_informations', 'user_book.id', '=', 'general_informations.user_book_id')
+            ->join('questions', 'user_book.id', '=', 'questions.user_book_id')
+            ->join('thesis', 'user_book.id', '=', 'thesis.user_book_id')
+            ->select(DB::raw('avg(general_informations.degree) as general_informations_degree,avg(questions.degree) as questions_degree,avg(thesis.degree) as thesises_degree'))
+            ->where('user_id', Auth::id())
+            ->orderBy('user_book.created_at', 'desc')->first();
 
         return $this->sendResponse($userBook, 'Last Achevment');
     }
 
-
     public function finishedAchievement()
     {
-        $userBook = UserBook::where('user_id',Auth::id())->where('status','finished')->get();
+        $userBook = UserBook::where('user_id', Auth::id())->where('status', 'finished')->get();
         return $this->sendResponse($userBook, 'Last Achevment');
     }
 
-    
+
     public function update(Request $request, $id)
     {
         $input = $request->all();
@@ -139,14 +133,15 @@ public function update(Request $request, $id)
             return $this->sendError('Validation error', $validator->errors());
         }
         try {
-            $userBook=UserBook::find($id);
-            $userBook->status=$request->status;
+            $userBook = UserBook::find($id);
+            $userBook->status = $request->status;
             $userBook->save();
-            $user=User::find($userBook->user_id);
-            $theses=Thesis::where('user_book_id',$id)->where('status','ready')->update(['status'=>$request->status]);
-            $questions=Question::where('user_book_id',$id)->where('status','ready')->update(['status'=>$request->status]);
-            $generalInformations=GeneralInformations::where('user_book_id',$id)->where('status','ready')->update(['status'=>$request->status]);
-               if ($request->status == 'review') {
+            $user = User::find($userBook->user_id);
+            $theses = Thesis::where('user_book_id', $id)->where('status', 'ready')->update(['status' => $request->status]);
+            $questions = Question::where('user_book_id', $id)->where('status', 'ready')->update(['status' => $request->status]);
+            $generalInformations = GeneralInformations::where('user_book_id', $id)->where('status', 'ready')->update(['status' => $request->status]);
+
+            if ($request->status == 'review') {
                 $user->notify(
                     (new \App\Notifications\SetAchievement())->delay(now()->addMinutes(2))
                 );
@@ -155,8 +150,6 @@ public function update(Request $request, $id)
                     (new \App\Notifications\RejectAchievement())->delay(now()->addMinutes(2))
                 );
             }
-
-
         } catch (\Error $e) {
             return $this->sendError($e);
         }
@@ -191,13 +184,12 @@ public function changeStatus(Request $request, $id)
 
         $userBook->status = $input['status'];
         try {
-            $user=User::find($userBook->user_id);
+            $user = User::find($userBook->user_id);
             $userBook->save();
-            if($userBook->status == 'rejected' || $userBook->status=='retard')
-            $user->notify(
-                (new \App\Notifications\RejectAchievement())->delay(now()->addMinutes(2))
-            );
-
+            if ($userBook->status == 'rejected' || $userBook->status == 'retard')
+                $user->notify(
+                    (new \App\Notifications\RejectAchievement())->delay(now()->addMinutes(2))
+                );
         } catch (\Error $e) {
             return $this->sendError('UserBook does not exist');
         }
@@ -216,19 +208,17 @@ public function review(Request $request)
 
         try {
             //REJECT OR RETARD ENTIER USER BOOK
-            $userBook=UserBook::find($request->id);
-            $user=User::find($userBook->user_id);
-            $userBook->status=$request->status;
-            $userBook->reviews=$request->reviews;
+            $userBook = UserBook::find($request->id);
+            $user = User::find($userBook->user_id);
+            $userBook->status = $request->status;
+            $userBook->reviews = $request->reviews;
             $userBook->save();
-            $theses=Thesis::where('user_book_id',$request->id)->update(['status'=>$request->status ,'reviews'=>$request->reviews ]);
-            $questions=Question::where('user_book_id',$request->id)->update(['status'=>$request->status ,'reviews'=>$request->reviews ]);
-            $generalInformations=GeneralInformations::where('user_book_id',$request->id)->update(['status'=>$request->status ,'reviews'=>$request->reviews ]);
+            $theses = Thesis::where('user_book_id', $request->id)->update(['status' => $request->status, 'reviews' => $request->reviews]);
+            $questions = Question::where('user_book_id', $request->id)->update(['status' => $request->status, 'reviews' => $request->reviews]);
+            $generalInformations = GeneralInformations::where('user_book_id', $request->id)->update(['status' => $request->status, 'reviews' => $request->reviews]);
             $user->notify(
                 (new \App\Notifications\RejectAchievement())->delay(now()->addMinutes(2))
             );
-
-
         } catch (\Error $e) {
             return $this->sendError('User Book does not exist');
         }
@@ -239,7 +229,7 @@ public function checkOpenBook()
     {
         $id = Auth::id();
 
-        $open_book = UserBook::where('user_id',$id)->where('status','!=','finished')->count();
+        $open_book = UserBook::where('user_id', $id)->where('status', '!=', 'finished')->count();
 
 
         return $this->sendResponse($open_book, 'Open Book');
@@ -258,17 +248,19 @@ public function getStageStatus($id)
     }
 
 
-    public function checkCertificate($id){
-        $status = Certificates::where('user_book_id',$id)->exists();
-        return $this->sendResponse($status , 'Status' );
+    public function checkCertificate($id)
+    {
+        $status = Certificates::where('user_book_id', $id)->exists();
+        return $this->sendResponse($status, 'Status');
     }
 
 
 
-    public function getStatistics($id){
-        $thesisFinalDegree = Thesis::where("user_book_id",$id)->avg('degree');
-        $questionFinalDegree = Question::where("user_book_id",$id)->avg('degree');
-        $generalInformationsFinalDegree = GeneralInformations::where("user_book_id",$id)->avg('degree');
+    public function getStatistics($id)
+    {
+        $thesisFinalDegree = Thesis::where("user_book_id", $id)->avg('degree');
+        $questionFinalDegree = Question::where("user_book_id", $id)->avg('degree');
+        $generalInformationsFinalDegree = GeneralInformations::where("user_book_id", $id)->avg('degree');
         $finalDegree = ($thesisFinalDegree + $questionFinalDegree + $generalInformationsFinalDegree) / 3;
         $response = [
             "thesises" => intval($thesisFinalDegree),
@@ -276,19 +268,19 @@ public function getStatistics($id){
             "general_informations" => intval($generalInformationsFinalDegree),
             "final" => intval($finalDegree),
         ];
-        return $this->sendResponse($response , 'Statistics');
-
+        return $this->sendResponse($response, 'Statistics');
     }
 
-    public function getGeneralstatistics(){
+    public function getGeneralstatistics()
+    {
         $thesis = ThesisController::thesisStatistics();
         $questions = QuestionController::questionsStatistics();
         $generalInformations = GeneralInformationsController::generalInformationsStatistics();
         $certificates = Certificates::count();
         $users = User::count();
         $books = Book::count();
-        $auditer = Role::where('name','auditer')->count();
-        $reviewer = Role::where('name','reviewer')->count();
+        $auditer = Role::where('name', 'auditer')->count();
+        $reviewer = Role::where('name', 'reviewer')->count();
 
 
 
@@ -302,15 +294,13 @@ public function getGeneralstatistics(){
             "auditers" => $auditer,
             "reviewer" => $reviewer,
         ];
-        return $this->sendResponse($response , 'Statistics');
-
+        return $this->sendResponse($response, 'Statistics');
     }
 
 
-    public function getUserBookByStatus($user_book_status){
-        $user_books = UserBook::where('status',$user_book_status)->with('user')->with('book')->get();
-        return $this->sendResponse($user_books , 'UserBooks');
+    public function getUserBookByStatus($user_book_status)
+    {
+        $user_books = UserBook::where('status', $user_book_status)->with('user')->with('book')->get();
+        return $this->sendResponse($user_books, 'UserBooks');
     }
-
-
 }
diff --git a/app/Http/Controllers/API/UserController.php b/app/Http/Controllers/API/UserController.php
index 7048fad..4ff8571 100644
--- a/app/Http/Controllers/API/UserController.php
+++ b/app/Http/Controllers/API/UserController.php
@@ -63,22 +63,13 @@ public function store(Request $request){
 
 
     public function updateInfo(Request $request){
+      
       try{
-	 $validator = Validator::make($request->all(), [
-            "image" => "required|image|mimes:png,jpg,jpeg,gif,svg",
-        ]);
-
-        if ($validator->fails()) {
-            return $this->sendError($validator->errors());
-        }
-
-
         $user=User::where('id',Auth::id())->update(['name'=>$request->name,'fb_name'=>$request->fb_name,'is_active'=>0]); 
         $user=User::where('id',Auth::id())->first();
         $this->createUserPhoto($request->file('image'), $user);
-
         }catch(\Error $e){
-        return $this->sendError($e);
+        return $this->sendError($e); 
       }
 
     }
diff --git a/app/Http/Controllers/InstallFonts.php b/app/Http/Controllers/InstallFonts.php
index a4bab37..bdab51a 100644
--- a/app/Http/Controllers/InstallFonts.php
+++ b/app/Http/Controllers/InstallFonts.php
@@ -9,7 +9,7 @@
 class InstallFonts extends BaseController
 {
 
-    public function index()
+    public function istall()
     {
 
         $path = '/var/www/html/osboha-certificates-backend/vendor/tecnickcom/tcpdf/fonts/arial.ttf';
diff --git a/app/Http/Middleware/IsActiveUser.php b/app/Http/Middleware/IsActiveUser.php
index c1ad953..9f8e7de 100644
--- a/app/Http/Middleware/IsActiveUser.php
+++ b/app/Http/Middleware/IsActiveUser.php
@@ -21,7 +21,7 @@ public function handle(Request $request, Closure $next)
         $user = $request->user('api');
 
 
-            if($user->is_active == 0 ){
+        if($user->is_active == 0 ){
             $response  = [
                 'success' => false,
                 'data' => 'Please wait until getting active'
diff --git a/app/Models/UserBook.php b/app/Models/UserBook.php
index e7201a5..b211ba3 100644
--- a/app/Models/UserBook.php
+++ b/app/Models/UserBook.php
@@ -17,29 +17,35 @@ class UserBook extends Model
 
     protected $table = 'user_book';
 
-    protected $with = array('thesises','user','book');
+    protected $with = array('thesises', 'user', 'book');
 
 
-    public function user(){
-        return $this->belongsTo(User::class,'user_id');
+    public function user()
+    {
+        return $this->belongsTo(User::class, 'user_id');
     }
 
-    public function book(){
-        return $this->belongsTo(Book::class,'book_id');
+    public function book()
+    {
+        return $this->belongsTo(Book::class, 'book_id');
     }
 
-    public function certificates(){
+    public function certificates()
+    {
         return $this->hasMany(Certificates::class);
     }
 
-    public function thesises(){
+    public function thesises()
+    {
         return $this->hasMany(Thesis::class);
     }
 
-    public function questions(){
+    public function questions()
+    {
         return $this->hasMany(Question::class);
     }
-    public function generalInformation(){
+    public function generalInformation()
+    {
         return $this->hasOne(GeneralInformations::class);
     }
 
@@ -61,7 +67,4 @@ public static function boot()
             });
         });
     }
-
 }
-
-
diff --git a/app/Notifications/Certificate.php b/app/Notifications/Certificate.php
index bfc6fb9..b948ad8 100644
--- a/app/Notifications/Certificate.php
+++ b/app/Notifications/Certificate.php
@@ -42,7 +42,7 @@ public function via($notifiable)
     public function toMail($notifiable)
     {
         return (new MailMessage)
-            ->from('no-replay@osboha180.com', 'Osboha 180')
+            ->from('->from('no-replay@osboha180.com', 'Osboha 180')', 'Example')
             ->subject('أصبوحة || شهادة توثيق الكتاب')
             ->line('تحية طيبة لحضرتك،
 
diff --git a/app/Notifications/MailResetPasswordNotification.php b/app/Notifications/MailResetPasswordNotification.php
index 7faccfb..29d4bf0 100644
--- a/app/Notifications/MailResetPasswordNotification.php
+++ b/app/Notifications/MailResetPasswordNotification.php
@@ -50,7 +50,7 @@ public function via($notifiable)
     public function toMail($notifiable)
     {
         return (new MailMessage)
-        ->from('no-replay@osboha180.com', 'Osboha 180')
+        ->from('->from('no-replay@osboha180.com', 'Osboha 180')', 'Example')
         ->subject('أصبوحة || تغيير كلمة المرور')
         ->line('من المهم أن تحفظ كلمة المرور الخاصة بك، لأنها سبيل الوصول إلى وثائقك.')
         ->line('لقد استلمنا طلب تغيير كلمة السر على الموقع.')
diff --git a/app/Notifications/RejectAchievement.php b/app/Notifications/RejectAchievement.php
index 943c5a3..a42153e 100644
--- a/app/Notifications/RejectAchievement.php
+++ b/app/Notifications/RejectAchievement.php
@@ -41,7 +41,7 @@ public function via($notifiable)
     public function toMail($notifiable)
     {
         return (new MailMessage)
-        ->from('no-replay@osboha180.com', 'Osboha 180')
+        ->from('->from('no-replay@osboha180.com', 'Osboha 180')', 'Example')
         ->subject('أصبوحة || تعديل حالة انجازك')
         ->line('تحية طيبة لحضرتك،
         لقد قام فريق المراجعة والتقييم برفض جواب أو أكثر من الأجوبة التي تم تقديمها في طلبكم لتوثيق القراءة مع أصبوحة 180 وذلك لمخالفاتها للشروط.')
diff --git a/app/Notifications/RejectUserEmail.php b/app/Notifications/RejectUserEmail.php
index 78fb903..b1b8261 100644
--- a/app/Notifications/RejectUserEmail.php
+++ b/app/Notifications/RejectUserEmail.php
@@ -23,9 +23,9 @@ class RejectUserEmail extends Notification implements ShouldQueue
      * @return void
      */
     public function __construct($rejectNote)
-    {        $this->rejectNote=$rejectNote;
-
-        $this->pageUrl = 'https://www.eligible.osboha180.com/user/update-info';
+    {
+        $this->pageUrl = 'https://www.eligible.osboha180.com/auth/signup';
+        $this->rejectNote=$rejectNote;
     }
 
     /**
@@ -48,8 +48,8 @@ public function via($notifiable)
     public function toMail($notifiable)
     {
         return (new MailMessage)
-        ->from('no-replay@osboha180.com', 'Osboha 180')
-                ->subject('أصبوحة || رفض التسجيل')
+        ->from('->from('no-replay@osboha180.com', 'Osboha 180')', 'Example')
+        ->subject('أصبوحة || رفض التسجيل')
         ->line('مرحبا
         تحية طيبة لحضرتك،
         للأسف لم يتم قبول تسجيلك في موقع توثيق القراءة - أصبوحة 180 بسبب عدم تطابق المعلومات مع الشروط. الرجاء تحديث بياناتك ومراعاة تقديم معلوماتك التي تطابق الوثائق الرسمية.')
diff --git a/app/Notifications/ReviewBook.php b/app/Notifications/ReviewBook.php
index c8569e2..bbb04a7 100644
--- a/app/Notifications/ReviewBook.php
+++ b/app/Notifications/ReviewBook.php
@@ -42,7 +42,7 @@ public function via($notifiable)
     public function toMail($notifiable)
     {
         return (new MailMessage)
-        ->from('no-replay@osboha180.com', 'Osboha 180')
+        ->from('->from('no-replay@osboha180.com', 'Osboha 180')', 'Example')
         ->subject('أصبوحة || تسليم انجازك للتدقيق')
         ->line('تحية طيبة لحضرتك،')
         ->line('تم تسليم انجازك لفريق المراجعة والتقييم');
diff --git a/app/Notifications/SetAchievement.php b/app/Notifications/SetAchievement.php
index ea8a605..541a99d 100644
--- a/app/Notifications/SetAchievement.php
+++ b/app/Notifications/SetAchievement.php
@@ -41,7 +41,7 @@ public function via($notifiable)
     public function toMail($notifiable)
     {
         return (new MailMessage)
-            ->from('example@example.com', 'Example')
+            ->from('->from('no-replay@osboha180.com', 'Osboha 180')', 'Example')
             ->subject('أصبوحة || تعديل حالة انجازك')
             ->line('تحية طيبة لحضرتك، تم تسليم توثيقك للفريق المختص 
         ')->line('انتظر تقييم المختصيين لقراءتك وليكن هذا حافزًا لك لتقرأ بشكل أفضل
diff --git a/app/Providers/AuthServiceProvider.php b/app/Providers/AuthServiceProvider.php
index e364c45..45b63a5 100644
--- a/app/Providers/AuthServiceProvider.php
+++ b/app/Providers/AuthServiceProvider.php
@@ -29,7 +29,7 @@ public function boot()
 
         VerifyEmail::toMailUsing(function ($notifiable, $url) {
             return (new MailMessage)
-                ->from('no-replay@osboha180.com', 'Osboha 180')
+            ->from('no-replay@osboha180.com', 'Osboha 180')
                 ->subject('تأكيد البريد الالكتروني')
                 ->line('لطفا، قم بالضغط على الزر أدناه، وذلك لتأكيد تسجيلك في موقع توثيق القراءة - أصبوحة 180.')
                 ->action('تأكيد البريد الالكتروني', $url);
diff --git a/app/Providers/RouteServiceProvider.php b/app/Providers/RouteServiceProvider.php
index 91d09af..ea87f2e 100644
--- a/app/Providers/RouteServiceProvider.php
+++ b/app/Providers/RouteServiceProvider.php
@@ -28,15 +28,16 @@ public function boot()
     {
         $this->configureRateLimiting();
 
-     	$this->routes(function () {
+        $this->routes(function () {
             Route::middleware('api')
-                ->namespace($this->namespace)
+                ->prefix('api')
                 ->group(base_path('routes/api.php'));
+ 
             Route::middleware('web')
                 ->group(base_path('routes/web.php'));
+        });
+    }
 
-    });
-}
     /**
      * Configure the rate limiters for the application.
      *
diff --git a/app/Traits/MediaTraits.php b/app/Traits/MediaTraits.php
index 368f37b..824dc0c 100644
--- a/app/Traits/MediaTraits.php
+++ b/app/Traits/MediaTraits.php
@@ -1,12 +1,11 @@
 <?php
 namespace App\Traits;
 use App\Models\Photos;
+
 use Illuminate\Support\Facades\Auth;
 use Illuminate\Support\Facades\File;
-use Illuminate\Support\Str;
-use Illuminate\Support\Facades\Storage;
-
 
+use Illuminate\Support\Facades\Storage;
 Trait MediaTraits{
 
     function createThesisMedia($media, $id){
@@ -26,15 +25,14 @@ function createThesisMedia($media, $id){
     }
 
     function createUserPhoto($media, $user){
- 
-        $randomString = Str::random(10);
-        $path = Storage::putFile(`image/$randomString.webp`, $media);
-        $user->picture = $path;
+
+        $path = Storage::put('image/saas.webp', $media);
+        $user->picture = 'image/sass.webp';
         $user->save();
         return $user;
 
-    }
-
+    }                                      
+ 
     function updateMedia($media, $media_id){
         //get current media
         $currentMedia= Photos::find($media_id);
diff --git a/config/database.php b/config/database.php
index 10ffebf..f0caa8f 100644
--- a/config/database.php
+++ b/config/database.php
@@ -64,7 +64,7 @@
                 'NO_ZERO_IN_DATE',
                 'NO_ZERO_DATE',
                 'ERROR_FOR_DIVISION_BY_ZERO',
-           
+                'NO_AUTO_CREATE_USER',
                 'NO_ENGINE_SUBSTITUTION'
             ],
  
diff --git a/config/queue.php b/config/queue.php
index 3f2afd4..25ea5a8 100644
--- a/config/queue.php
+++ b/config/queue.php
@@ -51,7 +51,18 @@
             'after_commit' => false,
         ],
 
-         'redis' => [
+        'sqs' => [
+            'driver' => 'sqs',
+            'key' => env('AWS_ACCESS_KEY_ID'),
+            'secret' => env('AWS_SECRET_ACCESS_KEY'),
+            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
+            'queue' => env('SQS_QUEUE', 'default'),
+            'suffix' => env('SQS_SUFFIX'),
+            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
+            'after_commit' => false,
+        ],
+
+        'redis' => [
             'driver' => 'redis',
             'connection' => 'default',
             'queue' => env('REDIS_QUEUE', 'default'),
diff --git a/database/seeders/DatabaseSeeder.php b/database/seeders/DatabaseSeeder.php
index dcd6318..c529ab9 100644
--- a/database/seeders/DatabaseSeeder.php
+++ b/database/seeders/DatabaseSeeder.php
@@ -19,13 +19,11 @@ public function run()
         // \App\Models\User::factory(10)->create();
 
         $this->call([
-//		RoleSeeder::class,
-		SuperAdminSeeder::class,
-             //RolesSeeder::class,
-            //LevelSeeder::class,
-            //SectionSeeder::class,
-            //BookSeeder::class,
-            //OneUserSeeder::class,
+            //RolesSeeder::class,
+            LevelSeeder::class,
+            SectionSeeder::class,
+            BookSeeder::class,
+            OneUserSeeder::class,
             // FqasSeeder::class,
             // UsersTableSeeder::class,
             // User_BookSeeder::class,
diff --git a/database/seeders/SuperAdminSeeder.php b/database/seeders/SuperAdminSeeder.php
index da63fea..9892630 100644
--- a/database/seeders/SuperAdminSeeder.php
+++ b/database/seeders/SuperAdminSeeder.php
@@ -24,7 +24,7 @@ public function run()
             "name" => "admin",
             "email" => "admin@gmail.com",
             "password" => $password,
-		"fb_name" => "admin"
+
         ]);
         $user->assignRole($role);
 
diff --git a/public/asset/images/certTemp b/public/asset/images/certTemp
deleted file mode 160000
index 8ca2e6b..0000000
--- a/public/asset/images/certTemp
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 8ca2e6b8b8767e430cc2a485bb3fa638ed71a15b
diff --git a/resources/views/certificate/achevment.blade.php b/resources/views/certificate/achevment.blade.php
index bed85ac..2459516 100644
--- a/resources/views/certificate/achevment.blade.php
+++ b/resources/views/certificate/achevment.blade.php
@@ -19,7 +19,7 @@
             {{ $achevmentText}}
         </p>
         <p class="break-space">&nbsp;</p>
-@if(isset($quotes))
+        @if(isset($quotes))
         <p class="sub-header">الاقتباسات</p>
         <p class="break-space">&nbsp;</p>
             @foreach($quotes as $quote)
@@ -29,6 +29,5 @@
             @endforeach
 
         @endif
-
     </div>
-</div>
+</div>
\ No newline at end of file
diff --git a/resources/views/certificate/generalInfo.blade.php b/resources/views/certificate/generalInfo.blade.php
index dadae98..1cc55e5 100644
--- a/resources/views/certificate/generalInfo.blade.php
+++ b/resources/views/certificate/generalInfo.blade.php
@@ -20,4 +20,4 @@
     </p>
   </div>
 </div>
-<!-- ##### END GRNRRAL INFORMATION ##### -->
+<!-- ##### END GRNRRAL INFORMATION ##### -->
\ No newline at end of file
diff --git a/resources/views/certificate/layout.blade.php b/resources/views/certificate/layout.blade.php
index ab5f5b7..fde843d 100644
--- a/resources/views/certificate/layout.blade.php
+++ b/resources/views/certificate/layout.blade.php
@@ -88,4 +88,4 @@
   .quote {
     font-size: 10pt !important;
   }
-</style>
+</style>
\ No newline at end of file
diff --git a/resources/views/certificate/page1.blade.php b/resources/views/certificate/page1.blade.php
index d080b0b..eea99be 100644
--- a/resources/views/certificate/page1.blade.php
+++ b/resources/views/certificate/page1.blade.php
@@ -1,10 +1,4 @@
 @extends('certificate.layout')
-<style>  .bold-title {
-  
-font-weight: 900;
-  }
-</style>
-
 <div class="pageWithCertificate">
       <div class="page-content">
             <br />
@@ -23,17 +17,15 @@
                   <strong>مستوى الكتاب: {{$level}} </strong>
             </p>
             <p>
-                  <strong><span style="font-size: 13px"> </span></strong>
+                  <strong><span style="font-weight: bolder;"> </span></strong>
             </p>
             <p>
                   تثبت هذه الوثيقة من مشروع صناعة القرّاء (أصبوحة 180) بأن 
-                                <u> <span class='bold-title'>{{$name}}</span></u>
-
+                  <strong><span style="color: white; background-color:#1d753b"> {{$name}}</span></strong>
 
                   قد حصل عليها بموجب المعايير المتبعة
                   قد طبق معايير القراءة المنهجية من خلال إنجازه قراءة كتاب
-                                    <strong><span style="font-weight: bolder;"> {{$book}}</span></strong>
-
+                  <strong> {{$book}}</strong>
 
                   . ويثمن المشروع جهوده المبذولة وسعيه
                   الحثيث في زيادة حصيلته المعرفية، ورغبته باستمرارية التعلم عبر
diff --git a/resources/views/certificate/page2.blade.php b/resources/views/certificate/page2.blade.php
index 624458a..390a97e 100644
--- a/resources/views/certificate/page2.blade.php
+++ b/resources/views/certificate/page2.blade.php
@@ -67,4 +67,4 @@
             (
         </p>
     </div>
-</div>
+</div>
\ No newline at end of file
diff --git a/resources/views/certificate/page3.blade.php b/resources/views/certificate/page3.blade.php
index 6fdb74e..08f964b 100644
--- a/resources/views/certificate/page3.blade.php
+++ b/resources/views/certificate/page3.blade.php
@@ -27,4 +27,4 @@
             رشحته للحصول على هذا الاستحقاق وهذه التقديرات.
         </p>
     </div>
-</div>
+</div>
\ No newline at end of file
diff --git a/resources/views/confairnEmail.blade.php b/resources/views/confairnEmail.blade.php
index e5a31af..83394e5 100644
--- a/resources/views/confairnEmail.blade.php
+++ b/resources/views/confairnEmail.blade.php
@@ -37,4 +37,4 @@
     </div>
 </body>
 
-</html>
+</html>
\ No newline at end of file
diff --git a/routes/api.php b/routes/api.php
index 8e16798..ebc4fcf 100644
--- a/routes/api.php
+++ b/routes/api.php
@@ -91,7 +91,7 @@
 
 //Users routes
 
-Route::group(['prefix' => 'users'], function () { 
+Route::group(['prefix' => 'users'], function () {
     Route::get('/', [UserController::class, 'index']);
     Route::post('/', [UserController::class, 'store'])->middleware(['auth:api','role:user|admin','verified','isActive']);
     Route::get('/statistics', [UserController::class, 'getUserStatistics'])->middleware(['auth:api','verified','isActive']);
diff --git a/routes/web.php b/routes/web.php
index fde3343..b3e52cc 100644
--- a/routes/web.php
+++ b/routes/web.php
@@ -16,8 +16,6 @@
 |
 */
 
-Route::get('install-fonts', [InstallFonts::class, 'index']);
-
 Route::get('/', function () {
     return view('welcome');
 });
@@ -27,5 +25,15 @@
 Route::get('/confairm', function () {
     return view('confairnEmail');
 });
-Route::get('generate-pdf', [PDFController::class, 'generatePDF']);
+Route::get('generate-pdf/{user_book_id}', [PDFController::class, 'generatePDF']);
+Route::get('install-fonts', [InstallFonts::class, 'index']);
+
+Route::get('generate-pdf_2', function(){
+    return view('certificate.layout');
+
+});
 
+Route::get('check-pdf-page', function(){
+    return view('certificate.page1');
+
+});
